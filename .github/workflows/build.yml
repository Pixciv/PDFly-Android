name: Android Debug Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.1.8937393
          cmake-version: 3.22.1

      - name: Download and extract MuPDF
        run: |
          mkdir -p app/src/main/cpp
          cd app/src/main/cpp
          wget https://mupdf.com/downloads/archive/mupdf-1.24.0-source.tar.gz
          tar -xzf mupdf-1.24.0-source.tar.gz
          mv mupdf-1.24.0-source mupdf_source
          rm mupdf-1.24.0-source.tar.gz
          echo "MuPDF downloaded successfully"

      - name: Create simplified CMakeLists.txt
        run: |
          cat > app/src/main/cpp/CMakeLists.txt << 'EOF'
          cmake_minimum_required(VERSION 3.18.1)
          project("pdfnative")

          set(CMAKE_CXX_STANDARD 17)
          set(CMAKE_CXX_STANDARD_REQUIRED ON)

          # Önce sadece temel bir test yapalım
          add_library(
              pdfnative
              SHARED
              PdfNative.cpp
          )

          find_library(log-lib log)
          target_link_libraries(pdfnative ${log-lib})
          EOF

      - name: Create minimal PdfNative.cpp
        run: |
          cat > app/src/main/cpp/PdfNative.cpp << 'EOF'
          #include <jni.h>
          #include <android/log.h>
          #include <string>

          #define LOG_TAG "PDFNative"
          #define LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)

          extern "C" JNIEXPORT void JNICALL
          Java_com_arvinapp_pdfreader_PdfNative_initMuPDF(JNIEnv* env, jobject /* this */) {
              LOGI("MuPDF initialization called (stub)");
          }

          extern "C" JNIEXPORT jstring JNICALL
          Java_com_arvinapp_pdfreader_PdfNative_getTitle(JNIEnv* env, jobject /* this */, jstring path) {
              return env->NewStringUTF("Test Title");
          }

          extern "C" JNIEXPORT jfloatArray JNICALL
          Java_com_arvinapp_pdfreader_PdfNative_getPageSize(JNIEnv* env, jobject /* this */, jstring path, jint pageNum) {
              jfloatArray result = env->NewFloatArray(2);
              jfloat dimensions[2] = {595.0f, 842.0f}; // A4 size
              env->SetFloatArrayRegion(result, 0, 2, dimensions);
              return result;
          }
          EOF

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Build with detailed logging
        run: ./gradlew :app:assembleDebug --info --stacktrace
      
      - name: Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: PDFly-Debug-APK
          path: app/build/outputs/apk/debug/*.apk

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: |
            **/*.log
            app/build/**/*.log
